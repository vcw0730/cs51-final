from tsp_genetic import *
from shortest_path_withlog import *

solution = []

def update_solution(newsol):
    global solution
    solution = newsol
    return

def choose_algorithm(x):
    if x == 1:
        run_genetic()
    else:
        # run dynamic
        return

def run_genetic():
    pop_num = cities # number in initial population
    gen_population(pop_num)
    children = int(input("How many rounds to run genetic? "))
    print ("Running... ")
    run_gen(children)
    x = best_sol(sols)
    solution = sols[x]
    update_solution(solution)
    print ("The best solution generated by the genetic algorithm is number", x,
       "with distance of", solution_len(solution))
    print ("To see the full path, input the command \"print_path()\".")

def print_path():
    global solution
    print ("Path: ")
    print ("1:",start_end)
    for i in range(len(solution)):
        print (i+2,":",solution[i])
    print (len(solution)+2,":",start_end)


prompt = "Which algorithm would you like to use? \n 1: Genetic\n 2: Dynamic\n--> "
choose_al = int(input(prompt))
choose_algorithm(choose_al)
